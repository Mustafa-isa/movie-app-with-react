{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ECC\\\\Desktop\\\\testreact\\\\src\\\\context\\\\Contextapi.js\",\n  _s = $RefreshSig$();\nimport { createContext, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initalState = {\n  whatched: [],\n  whatchlist: []\n};\nconst Contextapi = /*#__PURE__*/createContext(initalState);\nconst Globalapi = _ref => {\n  _s();\n  let {\n    childern\n  } = _ref;\n  const reducer = (state, action) => {\n    switch (action) {\n      case \"addToWhatchlist\":\n        return {\n          ...st\n        };\n    }\n  };\n  const [state, dispatch] = useReducer(reducer, initalState);\n  return /*#__PURE__*/_jsxDEV(Contextapi.Provider, {\n    value: {\n      whatched: state.whatched,\n      whatchlist: state.whatchlist,\n      movieDispatch: dispatch\n    },\n    children: childern\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 10\n  }, this);\n};\n_s(Globalapi, \"+9MizZQxdw5iUQLjLJzUsUFpoYw=\");\n_c = Globalapi;\nexport default Globalapi;\nvar _c;\n$RefreshReg$(_c, \"Globalapi\");","map":{"version":3,"names":["createContext","useReducer","jsxDEV","_jsxDEV","initalState","whatched","whatchlist","Contextapi","Globalapi","_ref","_s","childern","reducer","state","action","st","dispatch","Provider","value","movieDispatch","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ECC/Desktop/testreact/src/context/Contextapi.js"],"sourcesContent":["import { createContext,useReducer\r\n} from \"react\";\r\nconst initalState = {\r\n  whatched:[],\r\n  whatchlist:[]\r\n}\r\nconst Contextapi = createContext(initalState)\r\nconst Globalapi =({childern})=>{\r\n  const reducer =( state ,action) =>{\r\n    switch(action){\r\n      case \"addToWhatchlist\" :\r\n        return {\r\n          ...st\r\n        }\r\n    }\r\n  }\r\nconst [state ,dispatch] =useReducer(reducer ,initalState)\r\n  return <Contextapi.Provider value={{\r\n    whatched:state.whatched,\r\n    whatchlist:state.whatchlist,\r\n    movieDispatch: dispatch\r\n  }}>\r\n{childern}\r\n  </Contextapi.Provider>\r\n}\r\nexport default Globalapi"],"mappings":";;AAAA,SAASA,aAAa,EAACC,UAAU,QAC1B,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACf,MAAMC,WAAW,GAAG;EAClBC,QAAQ,EAAC,EAAE;EACXC,UAAU,EAAC;AACb,CAAC;AACD,MAAMC,UAAU,gBAAGP,aAAa,CAACI,WAAW,CAAC;AAC7C,MAAMI,SAAS,GAAEC,IAAA,IAAc;EAAAC,EAAA;EAAA,IAAb;IAACC;EAAQ,CAAC,GAAAF,IAAA;EAC1B,MAAMG,OAAO,GAAEA,CAAEC,KAAK,EAAEC,MAAM,KAAI;IAChC,QAAOA,MAAM;MACX,KAAK,iBAAiB;QACpB,OAAO;UACL,GAAGC;QACL,CAAC;IAAA;EAEP,CAAC;EACH,MAAM,CAACF,KAAK,EAAEG,QAAQ,CAAC,GAAEf,UAAU,CAACW,OAAO,EAAER,WAAW,CAAC;EACvD,oBAAOD,OAAA,CAACI,UAAU,CAACU,QAAQ;IAACC,KAAK,EAAE;MACjCb,QAAQ,EAACQ,KAAK,CAACR,QAAQ;MACvBC,UAAU,EAACO,KAAK,CAACP,UAAU;MAC3Ba,aAAa,EAAEH;IACjB,CAAE;IAAAI,QAAA,EACHT;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACe;AACxB,CAAC;AAAAd,EAAA,CAjBKF,SAAS;AAAAiB,EAAA,GAATjB,SAAS;AAkBf,eAAeA,SAAS;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}