{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ECC\\\\Desktop\\\\testreact\\\\src\\\\component\\\\ContextApi.js\",\n  _s = $RefreshSig$();\nimport { React, useReducer, createContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet inialVlaue = {\n  whatched: [],\n  whatchlist: []\n};\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_TO_WHATCHLIST\":\n      return {\n        ...state,\n        whatchlist: [action.add, ...state.whatchlist]\n      };\n    default:\n      return state;\n  }\n};\nexport const Globalcontext = /*#__PURE__*/createContext();\nfunction ContextApi() {\n  _s();\n  const [state, dispatch] = useReducer(reducer, inialVlaue);\n  return /*#__PURE__*/_jsxDEV(Globalcontext.Provider, {\n    value: {\n      whatched: state.whatched,\n      whatchlist: state.whatchlist,\n      dispatch: dispatch\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }, this);\n}\n_s(ContextApi, \"sF4T97fVj519ZIiys3Cl3uh7n48=\");\n_c = ContextApi;\nexport default ContextApi;\nvar _c;\n$RefreshReg$(_c, \"ContextApi\");","map":{"version":3,"names":["React","useReducer","createContext","jsxDEV","_jsxDEV","inialVlaue","whatched","whatchlist","reducer","state","action","type","add","Globalcontext","ContextApi","_s","dispatch","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ECC/Desktop/testreact/src/component/ContextApi.js"],"sourcesContent":["import {React,useReducer,createContext } from 'react'\r\n\r\nlet inialVlaue ={\r\n  whatched:[],\r\n  whatchlist:[],\r\n}\r\nconst reducer =(state , action) =>{\r\n  switch (action.type){\r\n    case \"ADD_TO_WHATCHLIST\" :\r\n      return{\r\n        ...state,\r\n        whatchlist:[action.add,...state.whatchlist]\r\n      }\r\n      default:\r\n       return state\r\n  }\r\n}\r\n export const Globalcontext = createContext()\r\nfunction ContextApi() {\r\n  const [state ,dispatch] =  useReducer(reducer ,inialVlaue)\r\n\r\n  return (\r\n  <Globalcontext.Provider value={{\r\n    whatched:state.whatched,\r\n    whatchlist:state.whatchlist,\r\n    dispatch:dispatch\r\n\r\n  }}>\r\n\r\n  </Globalcontext.Provider>\r\n  )\r\n}\r\n\r\n\r\nexport default ContextApi"],"mappings":";;AAAA,SAAQA,KAAK,EAACC,UAAU,EAACC,aAAa,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErD,IAAIC,UAAU,GAAE;EACdC,QAAQ,EAAC,EAAE;EACXC,UAAU,EAAC;AACb,CAAC;AACD,MAAMC,OAAO,GAAEA,CAACC,KAAK,EAAGC,MAAM,KAAI;EAChC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,mBAAmB;MACtB,OAAM;QACJ,GAAGF,KAAK;QACRF,UAAU,EAAC,CAACG,MAAM,CAACE,GAAG,EAAC,GAAGH,KAAK,CAACF,UAAU;MAC5C,CAAC;IACD;MACC,OAAOE,KAAK;EAAA;AAEnB,CAAC;AACA,OAAO,MAAMI,aAAa,gBAAGX,aAAa,EAAE;AAC7C,SAASY,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACN,KAAK,EAAEO,QAAQ,CAAC,GAAIf,UAAU,CAACO,OAAO,EAAEH,UAAU,CAAC;EAE1D,oBACAD,OAAA,CAACS,aAAa,CAACI,QAAQ;IAACC,KAAK,EAAE;MAC7BZ,QAAQ,EAACG,KAAK,CAACH,QAAQ;MACvBC,UAAU,EAACE,KAAK,CAACF,UAAU;MAC3BS,QAAQ,EAACA;IAEX;EAAE;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEuB;AAE3B;AAACP,EAAA,CAbQD,UAAU;AAAAS,EAAA,GAAVT,UAAU;AAgBnB,eAAeA,UAAU;AAAA,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}