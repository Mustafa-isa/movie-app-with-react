{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ECC\\\\Desktop\\\\testreact\\\\src\\\\component\\\\context\\\\Globalcontext.js\",\n  _s = $RefreshSig$();\nimport { React, createContext, useReducer, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initalValue = {\n  whatched: [],\n  whatchlist: []\n};\nconst ContextApi = /*#__PURE__*/createContext(initalValue);\nfunction Globalcontext() {\n  _s();\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case \"ADD_TO_WHATCHLIST\":\n        return {\n          ...state,\n          whatchlist: [action.payload, ...state.whatchlist]\n        };\n      case \"REMOVE_FROM_WHATCHLIST\":\n        return {\n          ...state,\n          whatchlist: state.whatchlist.filter(movie => movie.imdbID !== action.payload)\n        };\n      default:\n        return state;\n    }\n  };\n  let [state, dispatch] = useReducer(reducer, initalValue);\n  console.log(dispatch);\n  return /*#__PURE__*/_jsxDEV(ContextApi.Provider, {\n    value: {\n      whatched: state.whatched,\n      dispatch: dispatch,\n      whatchlist: state.whatchlist\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, this);\n}\n_s(Globalcontext, \"7yyEqtLKnVL6yHbcMtJdPx9obvE=\");\n_c = Globalcontext;\nexport const context = () => {\n  return;\n};\nexport default Globalcontext;\nvar _c;\n$RefreshReg$(_c, \"Globalcontext\");","map":{"version":3,"names":["React","createContext","useReducer","useContext","jsxDEV","_jsxDEV","initalValue","whatched","whatchlist","ContextApi","Globalcontext","_s","reducer","state","action","type","payload","filter","movie","imdbID","dispatch","console","log","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","context","$RefreshReg$"],"sources":["C:/Users/ECC/Desktop/testreact/src/component/context/Globalcontext.js"],"sourcesContent":["import {React ,createContext, useReducer, useContext} from 'react'\r\nconst initalValue=  {\r\n  whatched:[],\r\n  whatchlist:[]\r\n}\r\n const ContextApi =createContext(initalValue)\r\nfunction Globalcontext() {\r\n  const reducer =(state,action) =>{\r\n    switch (action.type){\r\n      case \"ADD_TO_WHATCHLIST\" :\r\n        return{\r\n          ...state,\r\n          whatchlist:[action.payload, ...state.whatchlist]\r\n        }\r\n        case \"REMOVE_FROM_WHATCHLIST\" :\r\n          return{\r\n            ...state,\r\n            whatchlist:state.whatchlist.filter(movie => movie.imdbID !== action.payload)\r\n          }\r\n          default :\r\n          return state\r\n          \r\n    }\r\n  }\r\n  let [state , dispatch] = useReducer(reducer ,initalValue)\r\n  console.log(dispatch)\r\n\r\n  return (\r\n  <ContextApi.Provider value={{\r\nwhatched:state.whatched,\r\ndispatch:dispatch,\r\n\r\nwhatchlist:state.whatchlist,\r\n  }}>\r\n\r\n  </ContextApi.Provider>\r\n  )\r\n}\r\nexport const context = () =>{\r\n  return\r\n}\r\n\r\nexport default Globalcontext\r\n"],"mappings":";;AAAA,SAAQA,KAAK,EAAEC,aAAa,EAAEC,UAAU,EAAEC,UAAU,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAClE,MAAMC,WAAW,GAAG;EAClBC,QAAQ,EAAC,EAAE;EACXC,UAAU,EAAC;AACb,CAAC;AACA,MAAMC,UAAU,gBAAER,aAAa,CAACK,WAAW,CAAC;AAC7C,SAASI,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAMC,OAAO,GAAEA,CAACC,KAAK,EAACC,MAAM,KAAI;IAC9B,QAAQA,MAAM,CAACC,IAAI;MACjB,KAAK,mBAAmB;QACtB,OAAM;UACJ,GAAGF,KAAK;UACRL,UAAU,EAAC,CAACM,MAAM,CAACE,OAAO,EAAE,GAAGH,KAAK,CAACL,UAAU;QACjD,CAAC;MACD,KAAK,wBAAwB;QAC3B,OAAM;UACJ,GAAGK,KAAK;UACRL,UAAU,EAACK,KAAK,CAACL,UAAU,CAACS,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,MAAM,KAAKL,MAAM,CAACE,OAAO;QAC7E,CAAC;MACD;QACA,OAAOH,KAAK;IAAA;EAGpB,CAAC;EACD,IAAI,CAACA,KAAK,EAAGO,QAAQ,CAAC,GAAGlB,UAAU,CAACU,OAAO,EAAEN,WAAW,CAAC;EACzDe,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;EAErB,oBACAf,OAAA,CAACI,UAAU,CAACc,QAAQ;IAACC,KAAK,EAAE;MAC9BjB,QAAQ,EAACM,KAAK,CAACN,QAAQ;MACvBa,QAAQ,EAACA,QAAQ;MAEjBZ,UAAU,EAACK,KAAK,CAACL;IACf;EAAE;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEoB;AAExB;AAACjB,EAAA,CA/BQD,aAAa;AAAAmB,EAAA,GAAbnB,aAAa;AAgCtB,OAAO,MAAMoB,OAAO,GAAGA,CAAA,KAAK;EAC1B;AACF,CAAC;AAED,eAAepB,aAAa;AAAA,IAAAmB,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}